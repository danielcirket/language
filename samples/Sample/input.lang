import Sx.AnotherTest;

module Sx.Test
{
	[TestAttribute][TestAttributeWithParam(1)][TestAttributesWithoutParam, TestAttributesWithParam(2)][TestAttributesWithParam(1), TestAttributesWithParam(2)]
	public class Program : Foo,
	{
		int _intField = 1;
		int value = 1;
		A _a;

		int IntProp { get; set; }
		
		constructor(int value)
		{
			_intField = value;
			
			const x = value[0];
			
			let y = _a || 1;
			
			
			for(let i = 0; i < 10; i++)
			{
				
			}
		
			while(true)
			{
				
			}
			
			do
			{
			} while(true);
			
			for(;;)
			{
			}
		}
		
	}

	interface Foo
	{
		int SomeIntProperty { get; }
		void Add(int a, int b);
	}

	enum TestEnum
	{
		[Description("1")]
		One,
		Two = 2,
		Three = TestModuleLevelMethod(),
		Four = 1 << 4
	}
	
	string TestModuleLevelMethod()
	{
		if (true)
		{
		}
		else if (true)
		{
		}
		else
		{
		}
		
		return "This is a test!";
	}
}